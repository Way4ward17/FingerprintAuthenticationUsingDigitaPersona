/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */



import com.digitalpersona.onetouch.DPFPCaptureFeedback;
import com.digitalpersona.onetouch.DPFPDataPurpose;
import com.digitalpersona.onetouch.DPFPFeatureSet;
import com.digitalpersona.onetouch.DPFPGlobal;
import com.digitalpersona.onetouch.DPFPSample;
import com.digitalpersona.onetouch.DPFPTemplate;
import com.digitalpersona.onetouch.capture.DPFPCapture;
import com.digitalpersona.onetouch.capture.event.DPFPDataAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPDataEvent;
import com.digitalpersona.onetouch.capture.event.DPFPErrorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPErrorEvent;
import com.digitalpersona.onetouch.capture.event.DPFPImageQualityAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPImageQualityEvent;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPReaderStatusEvent;
import com.digitalpersona.onetouch.capture.event.DPFPSensorAdapter;
import com.digitalpersona.onetouch.capture.event.DPFPSensorEvent;
import com.digitalpersona.onetouch.processing.DPFPEnrollment;
import com.digitalpersona.onetouch.processing.DPFPFeatureExtraction;
import com.digitalpersona.onetouch.processing.DPFPImageQualityException;
import com.digitalpersona.onetouch.verification.DPFPVerification;
import com.digitalpersona.onetouch.verification.DPFPVerificationResult;
import de.javasoft.plaf.synthetica.SyntheticaBlueLightLookAndFeel;

import java.awt.Image;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.Blob;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.sql.rowset.serial.SerialBlob;
import javax.swing.ImageIcon;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import netscape.javascript.JSObject;
import org.joda.time.DateTime;
import org.joda.time.LocalDateTime;

/**
 *
 * @author way4ward
 */
public class Clocking extends javax.swing.JFrame {
Connection conn;
PreparedStatement pstmt;
ResultSet rs;
private static final long serialVersionUID = 3389476239431661943L;
	private DPFPCapture capturer = DPFPGlobal.getCaptureFactory().createCapture();
      
	protected static JSObject jso = null;
        public static DefaultTableModel dtm; public static ResultSetMetaData md;
private DPFPVerification Verificador = DPFPGlobal.getVerificationFactory().createVerification();
    /**
     * Creates new form Clocking
     */
    public Clocking() {
        super("Finger Print Tecghnology (Verification Section)");
        initComponents();
        conn= Javaconnect.ConnecrDB();
  // dateCheck();
        // this.setExtendedState(JFrame.MAXIMIZED_BOTH);
      this.addComponentListener(new ComponentAdapter() {
			public void componentShown(ComponentEvent e) {
				init();
				start();
			}
			public void componentHidden(ComponentEvent e) {
				stop();
			}

		});
		pack();
		setLocationRelativeTo(null);
		setVisible(true);
    }

    
    private void dateCheck(){
        LocalDateTime d1 = new LocalDateTime();
        DateTime d2 = new DateTime();
        LocalDateTime d3 =new LocalDateTime(2019, 3, 10, 1, 58);
        
        if(d1.isAfter(d3)){
            JOptionPane.showMessageDialog(null, "ITS AFTER");
        }else{
            JOptionPane.showMessageDialog(null, "ITS BEFORE");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        picture = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fullname = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        department = new javax.swing.JLabel();
        gender = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        status1 = new javax.swing.JLabel();
        prompt = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        HomeButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/icons8_Fingerprint_Scan_24px.png"))); // NOI18N
        jButton1.setText("ENROLLMENT SECTION");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 520, 200, 50));

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 30, -1, -1));

        jPanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picture, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 30, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("GENDER");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 420, -1, -1));

        fullname.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        fullname.setForeground(new java.awt.Color(255, 153, 51));
        fullname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(fullname, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 367, 40));

        jLabel5.setBackground(new java.awt.Color(0, 0, 0));
        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 255));
        jLabel5.setText("NAME");
        jPanel3.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 280, -1, -1));

        department.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        department.setForeground(new java.awt.Color(255, 153, 0));
        department.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(department, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 370, 380, 40));

        gender.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        gender.setForeground(new java.awt.Color(255, 153, 0));
        gender.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 440, 390, 40));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 255, 255));
        jLabel6.setText("DEPARTMENT");
        jPanel3.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 350, -1, -1));

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("FINGER PRINT ");
        jPanel3.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 240, 150, 20));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 255));
        jLabel4.setText("PASSPORT");
        jPanel3.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 240, 100, 20));

        status1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jPanel3.add(status1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, 235, 27));

        prompt.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        prompt.setForeground(new java.awt.Color(255, 255, 0));
        jPanel3.add(prompt, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 480, 248, 27));

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/NEWICON.png"))); // NOI18N
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 190, 310, 270));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("VERIFIED");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, -1, -1));

        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/House_48px.png"))); // NOI18N
        HomeButton.setToolTipText("HOME PAGE");
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });
        jPanel3.add(HomeButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 520, 70, 50));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/iStock_fingerprint31.jpg"))); // NOI18N
        jLabel7.setToolTipText("");
        jPanel3.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 590));

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 590));

        pack();
    }// </editor-fold>//GEN-END:initComponents
 protected void init()
	{

		capturer.addDataListener(new DPFPDataAdapter() {
			public void dataAcquired(final DPFPDataEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	
                                    public void run() {
					makeReport("The fingerprint sample was captured.");
					setPrompt("Scan the same finger again.");
					process(e.getSample());
                                        
                                        
                                         
      
        try {
        check();
    } catch (Exception ex) {
        ex.printStackTrace();
    }
				}});
			}
		});
		capturer.addReaderStatusListener(new DPFPReaderStatusAdapter() {
			public void readerConnected(final DPFPReaderStatusEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					setPrompt("Scan the Student's fingerprint.");
				}});
			}
			public void readerDisconnected(final DPFPReaderStatusEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					setPrompt("Connect Fingerprint Reader.");
				}});
			}
		});
		capturer.addSensorListener(new DPFPSensorAdapter() {
			public void fingerTouched(final DPFPSensorEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					makeReport("The fingerprint reader was touched.");
				}});
			}
			public void fingerGone(final DPFPSensorEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					makeReport("The finger was removed from the fingerprint reader.");
				}});
			}
		});
		capturer.addImageQualityListener(new DPFPImageQualityAdapter() {
			public void onImageQuality(final DPFPImageQualityEvent e) {
				SwingUtilities.invokeLater(new Runnable() {	public void run() {
					if (e.getFeedback().equals(DPFPCaptureFeedback.CAPTURE_FEEDBACK_GOOD))
						makeReport("The quality of the fingerprint sample is good.");
					else
						makeReport("The quality of the fingerprint sample is poor.");
				}});
			}
		});
	}

   public  void check(){
        
try{ 
 
   pstmt = conn.prepareStatement("SELECT * FROM DATA");
 
rs= pstmt.executeQuery();
 
int i=0;
while(rs.next()){
i++;
System.out.println("SQL:"+rs.getString(1)+"\n");

System.out.println("Contador:"+i+"\n");

byte templateBuffer[] = rs.getBytes("FINGER");
 
 
DPFPTemplate referenceTemplate = DPFPGlobal.getTemplateFactory().createTemplate(templateBuffer);
 
setTemplate(referenceTemplate);

DPFPVerificationResult result = Verificador.verify(featuresverificacion, getTemplate());

if (result.isVerified()){
 
 JOptionPane ops1 = new JOptionPane("DATA RETRIEVE!",JOptionPane.INFORMATION_MESSAGE);
                    JDialog dialog1 = ops1.createDialog("GUEST DATA RETRIEVE!");
                    dialog1.setAlwaysOnTop(true); //<-- this line
                    dialog1.setModal(true);
                    
                    dialog1.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
                    dialog1.setVisible(true);
                    
            fullname.setText(rs.getString("NAME"));
            byte[] img = rs.getBytes("IMAGE");
 gender.setText(rs.getString("GENDER"));
  department.setText(rs.getString("DEPARTMENT"));
                    
                    jLabel8.setVisible(true);
                    jLabel9.setVisible(true);
  
  

                    //Resize The ImageIcon
                    ImageIcon image = new ImageIcon(img);
                    Image im = image.getImage();
                    Image myImg = im.getScaledInstance(jLabel2.getWidth(), jLabel2.getHeight(),Image.SCALE_SMOOTH);
                    ImageIcon newImage = new ImageIcon(myImg);
                    jLabel2.setIcon(newImage);
                    stop();
               
				start();
                       }
       
                    }
                    }
                    catch (SQLException e) {
                    System.out.println("Finger print Error: "+e.getMessage());
                    e.printStackTrace();
                    
                    }
    
    }
   private DPFPEnrollment enrollment = DPFPGlobal.getEnrollmentFactory().createEnrollment();
	protected void process(DPFPSample sample)
	{
    
featuresinscripcion = extractFeatures(sample, DPFPDataPurpose.DATA_PURPOSE_ENROLLMENT);


featuresverificacion = extractFeatures(sample, DPFPDataPurpose.DATA_PURPOSE_VERIFICATION);


if (featuresinscripcion != null){
try{
 
enrollment.addFeatures(featuresinscripcion);
 
Image image=convertSampleToBitmap(sample);
drawPicture(image);


}
catch (DPFPImageQualityException ex) {
System.err.println("Error: "+ex.getMessage());
}

finally {
 
switch(enrollment.getTemplateStatus()){
case TEMPLATE_STATUS_READY:  
 
setTemplate(enrollment.getTemplate());
        
break;

case TEMPLATE_STATUS_FAILED: 
enrollment.clear();
stop();
 
setTemplate(null);
JOptionPane.showMessageDialog(this, "Data Retrieve", "Data inspector", JOptionPane.ERROR_MESSAGE);
start();
break;
}
}
}
}
        public void setTemplate(DPFPTemplate template) {
DPFPTemplate old = this.template;
this.template = template;
firePropertyChange(TEMPLATE_PROPERTY, old, template);
}

		public DPFPFeatureSet featuresinscripcion;
public DPFPFeatureSet featuresverificacion;

public DPFPFeatureSet extractFeatures(DPFPSample sample, DPFPDataPurpose purpose){
DPFPFeatureExtraction extractor = DPFPGlobal.getFeatureExtractionFactory().createFeatureExtraction();
try {
return extractor.createFeatureSet(sample, purpose);
}
catch (DPFPImageQualityException e) {
return null;
}
}

	protected void start()
	{
		capturer.startCapture();
		setPrompt("Scan student's fingerprint");
	}

	protected void stop()
	{
		capturer.stopCapture();
	}

	public void setStatus(String string) {
		prompt.setText(string);
	}
	public void setPrompt(String string) {
		prompt.setText(string);
	}
	public void makeReport(String string) {
//		log.append(string + "\n");
	}
        private DPFPTemplate template;
public static String TEMPLATE_PROPERTY = "template";    
public DPFPTemplate getTemplate() {
return template;
}

	public void drawPicture(Image image) {
		picture.setIcon(new ImageIcon(
				image.getScaledInstance(picture.getWidth(), picture.getHeight(), Image.SCALE_DEFAULT)));

	}

	protected Image convertSampleToBitmap(DPFPSample sample) {
		return DPFPGlobal.getSampleConversionFactory().createImage(sample);
	}

	

	//For enrollment template, use *.fpt for file format
	//For verification feature, use *.fpp
	protected void writeFile(String filepath, byte[] data) {
		try {
			FileOutputStream out = new FileOutputStream(new File(filepath));
			out.write(data);
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
        public static void notifyHTML(String result) {
		if(jso!=null)
			jso.call("updateFingerprintStatus", new String[] {result} );
	}
    
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
       
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      setVisible(false);
      Home1 hm = new Home1();
      hm.setVisible(true);
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        jLabel8.setVisible(false);
      jLabel9.setVisible(false);
    }//GEN-LAST:event_formWindowOpened

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        setVisible(false);
        switchFrame obj=new switchFrame();
        obj.setVisible(true);
    }//GEN-LAST:event_HomeButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
          try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clocking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clocking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clocking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clocking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clocking().setVisible(true);
            }
        });}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton HomeButton;
    private javax.swing.JLabel department;
    private javax.swing.JLabel fullname;
    private javax.swing.JLabel gender;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel picture;
    private javax.swing.JLabel prompt;
    private javax.swing.JLabel status1;
    // End of variables declaration//GEN-END:variables
}
